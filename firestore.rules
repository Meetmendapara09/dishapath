
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to check if the user has an 'admin' role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Public collections that any signed-in user can read
    match /careers/{docId} {
      allow read: if isSignedIn();
      allow write: if false; // Disallow client-side writes
    }

    match /colleges/{docId} {
      allow read: if isSignedIn();
      allow write: if false; // Disallow client-side writes
    }

    match /exams/{docId} {
      allow read: if isSignedIn();
      allow write: if false; // Disallow client-side writes
    }

    match /scholarships/{docId} {
      allow read: if isSignedIn();
      allow write: if false; // Disallow client-side writes
    }

    match /studyMaterials/{docId} {
      allow read: if isSignedIn();
      allow write: if false; // Disallow client-side writes
    }


    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read anyone's profile
      allow get: if isAdmin();
      
      // Users can read and update their own profile.
      // Anyone can create a user doc (on signup).
      allow read, update: if isOwner(userId);
      allow create: if isSignedIn();
      
      // Admins can see the list of all users
      allow list: if isAdmin();

      // Rules for user subcollections
      match /bookmarkedColleges/{bookmarkId} {
        allow read, write, delete: if isOwner(userId);
      }

      match /chatSessions/{sessionId} {
        allow read, write, create: if isOwner(userId);
      }

      match /recommendations/{recId} {
        allow read, write, create, delete: if isOwner(userId);
      }
      
      match /quizResults/{quizId} {
        allow read, write, create: if isOwner(userId);
      }
    }
  }
}
